---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-hello-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-hello
  template:
    metadata:
      labels:
        app: nginx-hello
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: nginx-hello 
      containers:
      - name: nginx-hello
        image: nginxdemos/hello
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status/live
            port: 80
          initialDelaySeconds: 3
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /status/ready
            port: 80
          initialDelaySeconds: 3
          timeoutSeconds: 1
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        ports:
        - containerPort: 80
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: config-volume
          mountPath: /etc/nginx/conf.d/hello.conf
          subPath: hello.conf
      volumes:
        -  name: config-volume
           configMap:
             name: nginx-hello-configmap      
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-hello-configmap
data:
  hello.conf: |
    server {
    listen 80;
    listen [::]:80;

    root /usr/share/nginx/html;
    try_files /index.html =404;

    expires -1;

    sub_filter_once off;
    sub_filter 'server_hostname' '$hostname';
    sub_filter 'server_address' '$server_addr:$server_port';
    sub_filter 'server_url' '$request_uri';
    sub_filter 'server_date' '$time_local';
    sub_filter 'request_id' '$request_id';

    location = /status/live {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"UP"}';
    }

    location = /status/ready {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{status:"All set and ready to rumble!"}';
    }
    }


---
apiVersion: v1
kind: Service
metadata:
  name: nginx-hello-service
spec:
  selector:
    app: nginx-hello
  type: NodePort
  ports:
  - protocol: TCP
    port: 30001
    targetPort: 80
    nodePort: 30001
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa-resource-metrics-cpu
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-hello-deployment
  minReplicas: 2 
  maxReplicas: 6
  metrics: 
  - type: Resource
    resource:
      name: cpu 
      target:
        type: Utilization 
        averageUtilization: 70 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-service-account

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nginx-service-configmap-access-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nginx-service-configmap-access-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-service-configmap-access-role
subjects:
  - kind: ServiceAccount
    name: nginx-service-account

